
apiVersion: v1
kind: Service
metadata:
  name: learner
spec:
  nodeSelector:
    nodetype: phortx
  containers:
    - name: learner-container
      tty: true
      stdin: true
      resources: # Maybe a good idea to have the learner on its own gpu, specify like below
        limits:
          nvidia.com/gpu: 1
      image: docker.pdl.cmu.edu/l2r2022:latest # Slightly different image or files or git repo
      command:
        - /bin/bash
        - -c
        - "{{LEARNER_CMD}}"
--- # maybe have a script to generate this yaml file for multiple worker sets
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: worker-pods
  labels:
    tier: worker-set
spec:
  # 2 to start, then for phortx 30-40 is the upper bound probably
  replicas: "{{NUM_WORKERS}}" 
  selector:
    matchLabels:
      tier: worker-set
  template:
    metadata:
      labels:
        tier: worker-set
    spec:
      nodeSelector:
        # we don't specify the cluster, maybe it's ok to just delete the phortx stuff?
        # 1-3
        nodetype: 1
      containers:
        - name: worker-container
          tty: true
          stdin: true
          env:
          # This is the tricky bit, We're not claiming the pods, we might end up sharing it
          # not-yet done bit: multiple worker sets for each gpu group in the hardware
          #### Change GPUs if you want more replica sets
          # "{{GPU_ID}}" 
            - name: NVIDIA_VISIBLE_DEVICES 
              value: "{{GPU_ID}}" # 0-7??
            - name: CUDA_VISIBLE_DEVICES
              value: "{{GPU_ID}}" # has to match the above
          image: "{{WORKER_IMAGE}}"
          command:
            - "/bin/bash"
            - "-c"
            - "{{WORKER_CMD}}"



#### Or we can run mulitple experiments by specifying node for a diff experiment


# ---
# apiVersion: apps/v1
# kind: ReplicaSet
# metadata:
#   name: worker-pods
#   labels:
#     tier: worker-set
# spec:
#   # 2 to start, then for phortx 30-40 is the upper bound probably
#   replicas: "{{NUM_WORKERS}}" 
#   selector:
#     matchLabels:
#       tier: worker-set
#   template:
#     metadata:
#       labels:
#         tier: worker-set
#     spec:
#       nodeSelector:
#         # we don't specify the cluster, maybe it's ok to just delete the phortx stuff?
#         # 1-3
#         nodetype: 1
#       containers:
#         - name: worker-container
#           tty: true
#           stdin: true
#           env:
#             - name: NVIDIA_VISIBLE_DEVICES 
#               value: "{{GPU_ID}}" 
#             - name: CUDA_VISIBLE_DEVICES
#               value: "{{GPU_ID}}" 
#           image: "{{WORKER_IMAGE}}"
#           command:
#             - "/bin/bash"
#             - "-c"
#             - "{{WORKER_CMD}}"